#!/usr/bin/env ruby

def get_gears(line_no, first, last, schema)
  near_gears = []
  y_min = [0, line_no - 1].max
  y_max = [schema.length - 1, line_no + 1].min
  x_min = [0, first - 1].max
  x_max = [schema[line_no].length - 1, last + 1].min

  schema[y_min..y_max].each_with_index do |line, line_offset|
    line[x_min..x_max].each_char.with_index do |char, char_offset|
      near_gears << "#{y_min + line_offset},#{x_min + char_offset}" if char == "*"
    end
  end

  near_gears
end

file = File.open(ARGV[0])

schema = file.readlines.map(&:chomp)

gears = {}

schema.each_with_index do |line, line_no|
  boundaries = []
  in_num = false

  line.each_char.with_index do |c, idx|
    if c.match(/\d/) && !in_num
      in_num = true
      boundaries << idx
    end

    if !c.match(/\d/) && in_num
      in_num = false
      boundaries << idx - 1
    end

    if idx == line.length - 1 && in_num
      boundaries << idx
    end
  end

  boundaries.each_slice(2) do |first, last|
    get_gears(line_no, first, last, schema).each do |gear|
      (gears[gear] ||= []) << line[first..last].to_i
    end
  end
end

puts gears.values.select { |g| g.length == 2 }.map { |first, second| first * second }.sum
