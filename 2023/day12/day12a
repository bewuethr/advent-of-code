#!/usr/bin/env -S ruby -W0

def to_list(record)
  record.scan(/#+/).map(&:length).join(",")
end

def generate(record)
  locs = record.chars.each_with_object([]).with_index do |(c, locs), idx|
    locs << idx if c == "?"
  end

  warn "Question mark locations: #{locs}"

  len = locs.length
  warn "Generating #{2**len} patterns"
  (0...2**len).to_a.map do |n|
    arrangement = n.to_s(2).rjust(len, "0").tr("01", ".#")
    new_record = record.clone
    arrangement.chars.zip(locs).each { |spring, idx| new_record[idx] = spring }

    new_record
  end
end

file = File.open(ARGV[0])

entries = file.readlines.map do |line|
  (record, list) = line.split
  {record:, list:}
end

sum_counts = entries.sum do |entry|
  warn "Original: #{entry[:record]}"
  generate(entry[:record]).count do |record|
    warn "#{record} vs. #{entry[:list]}"
    to_list(record) == entry[:list]
  end
end

puts sum_counts
