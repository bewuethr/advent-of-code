#!/usr/bin/env ruby

disk_map = File.read(ARGV[0]).strip

expanded = []
id = 0

disk_map.chars.map(&:to_i).each_with_index do |n, idx|
  if idx.even?
    expanded.concat([id] * n)
    id += 1
  else
    expanded.concat(["."] * n)
  end
end

empty_slots = expanded.each_with_index
  .select { |block, _| block == "." }
  .map { |_, idx| idx }

block_slots = expanded.each_with_index
  .reject { |block, _| block == "." }
  .map { |_, idx| idx }
  .reverse

empty_slots.each_with_index do |expanded_idx, idx|
  break if expanded_idx > block_slots[idx]
  expanded[expanded_idx], expanded[block_slots[idx]] = expanded[block_slots[idx]], expanded[expanded_idx]
end

checksum = 0

expanded.each_with_index do |n, idx|
  checksum += n * idx unless n == "."
end

puts checksum
